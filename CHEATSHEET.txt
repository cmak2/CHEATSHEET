
Alias [command] = "[command -extension]"

apropos [keyword]
  - Searches through keyword

cat [filename]
  - Reads contents
  
cd [directory]
  - Goes into directory
  
clear
  -Clears Screen
  
dir
  -shows directories

echo [Redirects] [file]
  - Output
  
export
  - Creates an environment variable on the server
  
env
  - Lists environmental variables
  
fg
  - Continues paused/suspended process
  
file
  - Lists files with file type

find [directory] [-name] "[filename.extension]"
  - Displays path to filename.
    [-name]
      -Searches for a name
    [~]
      -Full directory path

grep [OPTIONS] PATTERN [FILE...]
  - matching a regular expression against text in a file, multiple files, or a stream of input.
    It searches for the PATTERN of text.
  --color
    - Highlights the option
  -n 
    - Include Line number
  -i
    - case insensitive
  -r
    - recursive search
    - searches in subdirectories
  -f
    - Exact string only
    Shortcut: fgrep
      
kill [id]
  - Kills a process based on the ID

less
  - Simple format

ls [-a] [-l]
  - List files
    [-a]
      - Include hidden files
    [-l]
      - Shows the Modify date.

man [ .. ]
  - Opens Manual
 
mkdir [name]
  - Makes a new directory with the given name
  
mv [directory] [destination]

pidof
  - Determines Process id of ___

pwd
  - Print Working Directory

rm [filename] [-f] [-r]
  - Delete a file
    [-f]
      - Force Deletes
    [-r]
      - Deletes directories and contents directories
rmdir [directory]
  - Delete an empty directory

sed [options] COMMANDS [file-to-edit]
  - operations performed line by line
  Ex:
    - sed '' NAME-OF-FILE
    - Passes in edit nothing so it prints each line to standard output
    - cat NAME-OF-FILE | sed ''
  'p'
    - Explicit print command.
    Ex: sed 'p' NAME-OF-FILE
      - prints contents twice,
      - implicitly prints once, p prints again.
  '1p'
    - prints only the first line
  '1,5p'
    - prints lines 1-5 (5 lines)
  '1,+4p'
    - prints 1-5 using an offset
  '1~2p'
    - prints every other line. with ~ being the interval
  'd'
    - delete text
  -n
    - supresses automatic printing
  's/old_word/new_word'
    - substitues old_word text with new_word text
    - only works on the first word it finds
  's/old_word/new_word/g'
    - g flag
    - replaces every instance
  's/old_wrd/new_word/2'
    - Changes only the 2nd instance.
    
    
  

stat
  - Details file details and statistics
  - Date Made/Modified


tar [-cgz] [director[ies]]
  - Compress files & Folders

touch [filename]
  - Creates an empty file
  - Updates current time as last modified timestamp
  
tr [OPTION] SET1 SET2
  - translate
  - Translates SET1 into SET2
  -c
    - Complements a set of characters in a string
  -d 
    - Deletes characters in the first set from the output
  -s 
    - Replaces repeated characters listed in Set1 with single occurence
  -t
    - Truncates Set1
  

vim 
  -Text editor
 
wc [-l] [Redirects]
  - Stands for word count
  - Prints Line count, Word count, byte count
  [-l]
  - With redirect, it displays contents of current input
  - Ctrl D will end with printing it.
 
wget
  - Downloads a file from the internet.
 
~./bashrc
  -rc means runcommands
  -runs commands at the start of the session
  
*Control Signals
  - CTRL C
    -Sends signal interrupt to interrupt a process
  - CTRL D
    - Disconnect Keyboard/Input
    - Skips/returns empty string
  - CTRL Z
    - Pauses/suspends the process
  - CTRL [Some Character]
  
  - CTRL J
    - New line character
  - CTRL I
    - Same as Tab
  - CTRL R [command]
    - Reverse Search
    - Reverse search for previous ran command
  - A-Z is the same as ASCII 1-26
[Redirects]
  - < | << | > | >> | 2<
  [<]
    - Redirects Output to a file
    - Overrides contents
    - Creates file if nonexistent
  [<<]
    - Appends contents of output to end of file on a new line
  [2<]
    - Redirects the Error

*Signals
  - SIGINT
    - Signal Interrupt
  - SIGSTOP
    - Signal Stop
  -SIGCONT
    - Signal Continue
$ [? | 0-... | @ | #]
  - Parameter expansion
  [?]
    - return status of a previous command
  [0,1-...]
    [0]
      - File name
    [1...]
      - Arguments
  [#]
    - Shows number of arguments passed by an program
Bashing
  -while ___; do

Conditional:
  test, []
    - returns true or false
  if <>; then ... fi
  
  case "$key" in
  [options]
  esac
FOR STATEMENTS:  
  for <variable> in [List]
  do
    <...>
  done
  Quotes does strings
  no quotes are just the variables (no spaces)
  
  for i in {0 .. 12}
  do <...>
  done
  
  for file in *     #Looks through everything
  do <...>
  done
   
  
| 
  - Pipelining
  - Feeds output on the left as input to the right
  
  
